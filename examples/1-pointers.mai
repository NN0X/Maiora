#import IO.print

public none foo1(reference sint64 numbers)
{
        print("number at 0: ", numbers[0]);
}

public none foo1(address sint64 numbers)
{
        print("number at 0: ", numbers[0]);
        numbers[1] = 101s;
}

entry sint32 main(none)
{
        address sint64 numbers = heap 10*[0s];
        numbers[0] = 42s;

        reference sint64 numRef = ref numbers;
        foo1(numRef);

        foo1(ref numbers);

        foo1(numbers);

        return 0s;
}

// INFO: reference is immutable but it can be reassigned
// INFO: address is mutable but it cannot be reassigned
// INFO: reference is created from an existing address
// INFO: references have inherently the same scope as the address they refer to
// INFO: returning reference or address from a function is not allowed
// INFO: address is freed automatically when it goes out of scope
